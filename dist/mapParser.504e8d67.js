!function(I){var g={};function C(A){if(g[A])return g[A].exports;var n=g[A]={i:A,l:!1,exports:{}};return I[A].call(n.exports,n,n.exports,C),n.l=!0,n.exports}C.m=I,C.c=g,C.d=function(I,g,A){C.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:A})},C.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},C.t=function(I,g){if(1&g&&(I=C(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var n in I)C.d(A,n,function(g){return I[g]}.bind(null,n));return A},C.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return C.d(g,"a",g),g},C.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},C.p="dist/",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./app/lib/createOffscreenCanvas.js\n/* harmony default export */ var createOffscreenCanvas = (function (_ref) {\n  var height = _ref.height,\n      width = _ref.width;\n  var canvas = new OffscreenCanvas(height, width);\n  canvas.height = height;\n  canvas.width = width;\n  var context = canvas.getContext('2d');\n  return {\n    canvas: canvas,\n    context: context\n  };\n});\n// CONCATENATED MODULE: ./app/lib/constants.js\nvar TEXT = 'text';\nvar MAPDATA = 'mapdata';\nvar MUSIC = 'music';\nvar MIDI = 'midi';\nvar MP3 = 'mp3';\nvar PNG = 'png';\nvar MUS = 'mus';\nvar GRAPHIC = 'graphic';\nvar FLAT = 'flat';\nvar MARKER = 'marker';\nvar ENDOOM = 'ENDOOM';\nvar TEXTUREx = ['TEXTURE1', 'TEXTURE2'];\nvar TEXTLUMPS = ['DEHACKED', 'MAPINFO', 'ZMAPINFO', 'EMAPINFO', 'DMXGUS', 'DMXGUSC', 'WADINFO', 'EMENUS', 'MUSINFO', 'SNDINFO', 'GLDEFS', 'KEYCONF', 'SCRIPTS', 'LANGUAGE', 'DECORATE', 'SBARINFO', 'MENUDEF'];\nvar DATA_LUMPS = ['PLAYPAL', 'COLORMAP', 'TEXTURE1', 'TEXTURE2', 'PNAMES', 'ENDOOM'];\nvar DEFAULT_EXTENSION = 'lmp';\nvar EXTENSIONS = {\n  text: 'txt',\n  mp3: 'mp3',\n  mus: 'mus',\n  midi: 'mid',\n  png: 'png'\n};\n/* Environment */\n\nvar NO_BRAND_ENV = 'development-no-brand';\n/* Workers */\n\nvar SERVICE_WORKER_CORE = 'service-worker-core.js';\n/* Web worker internal errors */\n\nvar INVALID_TEXT = 'INVALID_TEXT';\n/* Themes */\n\nvar DARK_THEME = 'dark';\nvar LIGHT_THEME = 'light';\n/* Input types */\n\nvar CHECKBOX = 'checkbox';\n/* File formats */\n\nvar SUPPORTED_FORMATS = ['.wad', '.zip', '.pk3', '.json'];\nvar VALID_FILE_FORMATS = ['', 'application/x-doom', 'application/zip', 'application/json'];\n/* WAD types */\n\nvar IWAD = 'IWAD';\nvar PWAD = 'PWAD';\nvar VALID_WAD_TYPES = [IWAD, PWAD];\n/* Lump types */\n\nvar MAP = 'maps';\nvar INTERMISSION = 'intermission';\nvar STATUS_BAR = 'status bar';\nvar MENU = 'menu';\nvar IMAGE_LUMPS = ['patches', 'flats', 'sprites', MENU, INTERMISSION, STATUS_BAR];\nvar UNCATEGORIZED = 'uncategorized';\n/* Lump names */\n\nvar THINGS = 'THINGS';\nvar TEXTMAP = 'TEXTMAP';\nvar ENDMAP = 'ENDMAP';\nvar MAP_LUMPS = [THINGS, 'LINEDEFS', 'SIDEDEFS', 'VERTEXES', 'SEGS', 'TEXTMAP', 'SSECTORS', 'NODES', 'SECTORS', 'REJECT', 'BLOCKMAP', // Hexen only\n'BEHAVIOR', // ZDoom only? (optional)\n'SCRIPTS', // Universal Doom Map Format only\n'ZNODES', 'DIALOGUE'];\nvar OPENGL_MAP_LUMPS = ['GL_VERT', 'GL_SEGS', 'GL_SSECT', 'GL_NODES', 'GL_PVS'];\nvar START_MARKERS = new RegExp(/^[0-9a-zA-Z]{0,2}_START$/);\nvar END_MARKERS = new RegExp(/^[0-9a-zA-Z]{0,2}_END$/);\nvar TEXTURE_LUMPS = new RegExp(/^TEXTURE[0-9a-zA-Z]$/);\nvar INTERMISSION_LUMPS = new RegExp(/^WI[0-9a-zA-Z_]{1,}$/); // Doom II\n\nvar INTERMISSION_MAP_NAME_LUMPS = new RegExp(/^CWILV[0-9a-zA-Z_]{1,}$/);\nvar STATUS_BAR_LUMPS = new RegExp(/^(ST|AMM|BRDR_)[0-9a-zA-Z_]{1,}$/);\n/* Unique lumps */\n\nvar ANSI_LUMPS = [// Doom or Chex Quest\n'ENDOOM', // Heretic\n'ENDTEXT', // Strife\n'ENDSTRF', // Boom\n'ENDBOOM'];\nvar MAPINFO = ['MAPINFO', 'ZMAPINFO'];\nvar PLAYPAL = 'PLAYPAL';\nvar COLORMAP = 'COLORMAP';\nvar PNAMES = 'PNAMES';\nvar SBARINFO = 'SBARINFO'; // Hexen only\n\nvar SNDINFO = 'SNDINFO';\nvar MENU_SCREENS = ['TITLEPIC', 'HELP', 'HELP1', 'HELP2', 'CREDIT'];\nvar INTER_SCREENS = ['INTERPIC', // Doom 1 registered\n'ENDPIC', 'VICTORY2', 'PFUB1', 'PFUB2', // Doom 2\n'BOSSBACK'];\nvar MUSIC_LUMPS = ['GENMIDI', 'DMXGUS', 'DMXGUSC'];\nvar DEMO_LUMPS = ['DEMO1', 'DEMO2', 'DEMO3', 'DEMO4'];\nvar END_LUMPS = new RegExp(/^END[0-9]{1,}$/);\n/* Lump original formats */\n\nvar ANSI = 'ANSI';\n/* Lump special values */\n\nvar LUMP_INDEX_ENTRY_SIZE = 16;\nvar LUMP_INDEX_ENTRY_OFFSET_TO_LUMP_SIZE = 4;\nvar LUMP_INDEX_ENTRY_OFFSET_TO_LUMP_NAME = 8;\nvar COLOR_COUNT_PER_PALETTE = 256;\nvar PALETTE_SIZE = 768;\nvar COLORMAP_SIZE = 256;\nvar BYTES_PER_COLOR = 3;\nvar GREEN_COLOR_OFFSET = 1;\nvar BLUE_COLOR_OFFSET = 2;\nvar FLAT_DIMENSIONS = 64;\nvar IMAGE_DATA_HEADER_SIZE = 8;\nvar IMAGE_DATA_BOUNDARY = 255;\nvar TRANSPARENT_PIXEL = -1;\nvar HEXEN_SOUND_ARCHIVE_PATH = '$ARCHIVEPATH';\nvar HEXEN_SOUND_REGISTERED = '$REGISTERED';\nvar HEXEN_MUSIC_KEYWORD = '$MAP';\n/* MUS -> MIDI conversion */\n\nvar MUS_HEADER = 'MUS';\nvar MUS_HEADER_SIGNATURE = ['M'.charCodeAt(0), 'U'.charCodeAt(0), 'S'.charCodeAt(0), 0x1A].join(' ');\nvar MIDI_HEADER = 'MThd';\nvar MIDI_HEADER_SIZE = 4;\nvar MIDI_HEADER_DATA = ['M'.charCodeAt(0), 'T'.charCodeAt(0), 'h'.charCodeAt(0), 'd'.charCodeAt(0), // Main header\n0x00, 0x00, 0x00, 0x06, // Header size\n0x00, 0x00, // MIDI type (0)\n0x00, 0x01, // Number of tracks\n0x00, 0x46, // Resolution\n'M'.charCodeAt(0), 'T'.charCodeAt(0), 'r'.charCodeAt(0), 'k'.charCodeAt(0), // Start of track\n0x00, 0x00, 0x00, 0x00];\nvar MUS_NUM_CHANNELS = 16;\nvar MUS_PERCUSSION_CHANNEL = 15;\nvar MIDI_PERCUSSION_CHANNEL = 9;\nvar MIDI_TRACKLENGTH_OFS = 18;\nvar MIDI_CONTROLLER_MAP = [0x00, 0x20, 0x01, 0x07, 0x0A, 0x0B, 0x5B, 0x5D, 0x40, 0x43, 0x78, 0x7B, 0x7E, 0x7F, 0x79]; // MUS event codes\n\nvar MUS_RELEASE_KEY = 0x00;\nvar MUS_PRESS_KEY = 0x10;\nvar MUS_PITCH_WHEEL = 0x20;\nvar MUS_SYSTEM_EVENT = 0x30;\nvar MUS_CHANGE_CONTROLLER = 0x40;\nvar MUS_SCORE_END = 0x60; // MIDI event codes\n\nvar MIDI_RELEASE_KEY = 0x80;\nvar MIDI_PRESS_KEY = 0x90;\nvar MIDI_CHANGE_CONTROLLER = 0xB0;\nvar MIDI_CHANGE_PATCH = 0xC0;\nvar MIDI_PITCH_WHEEL = 0xE0;\n/* MIDI player */\n\nvar MAX_I16 = Math.pow(2, 15);\nvar MIDI_AUDIO_BUFFER_SIZE = 8192; // signed 16-bit samples\n\nvar MIDI_AUDIO_S16LSB = 0x8010;\nvar MIDI_PATCH_URL = '/public/midi/pat/';\nvar MIDI_PLAYER_MESSAGE_PREFIX = 'Midi player:';\nvar MIDI_ERROR = 'MIDI_ERROR';\nvar MIDI_STATUS = 'MIDI_STATUS';\nvar MIDI_PRELOAD = 'MIDI_PRELOAD';\nvar MIDI_LOAD_FILE = 'MIDI_LOAD_FILE';\nvar MIDI_LOAD_PATCH = 'MIDI_LOAD_PATCH';\nvar MIDI_PLAY = 'MIDI_PLAY';\nvar MIDI_PAUSE = 'MIDI_PAUSE';\nvar MIDI_RESUME = 'MIDI_RESUME';\nvar MIDI_STOP = 'MIDI_STOP';\nvar MIDI_END = 'MIDI_END';\n/* DMX -> PCM conversion */\n\nvar DMX_HEADER_SIZE = 18;\nvar DMX_TAIL_PADDING = 2;\n/* PCM Player */\n\nvar DEFAULT_PCM_SAMPLE_RATE = 11025;\nvar DEFAULT_PCM_CONFIGURATION = {\n  encoding: '8bit',\n  channels: 1,\n  volume: 1,\n  logging: false\n};\nvar PCM_MAX_VALUES = {\n  '8bit': 255,\n  '16bit': 65535,\n  '32bit': 4294967295,\n  '32bitFloat': 1\n};\nvar PCM_TYPED_ARRAYS = {\n  '8bit': Uint8Array,\n  '16bit': Uint16Array,\n  '32bit': Uint32Array,\n  '32bitFloat': Float32Array\n};\nvar PCM_PLAYER_MESSAGE_PREFIX = 'PCM player:';\nvar PCM_STATUS = 'PCM_STATUS';\nvar PCM_ERROR = 'PCM_ERROR';\nvar PCM_PLAY = 'PCM_PLAY';\nvar PCM_PAUSE = 'PCM_PAUSE';\nvar PCM_STOP = 'PCM_STOP';\nvar PCM_END = 'PCM_END';\n/* Map data */\n\nvar MAP_PADDING = 64;\nvar MAP_DATA_SCHEMAS = {\n  THINGS: {\n    size: 10,\n    properties: [{\n      name: 'x',\n      format: 'Int16'\n    }, {\n      name: 'y',\n      format: 'Int16'\n    }, {\n      name: 'angle',\n      format: 'Int16'\n    }, {\n      name: 'type',\n      format: 'Int16'\n    }, {\n      name: 'flags',\n      format: 'Int16'\n    }]\n  },\n  VERTEXES: {\n    size: 4,\n    properties: [{\n      name: 'x',\n      format: 'Int16'\n    }, {\n      name: 'y',\n      format: 'Int16'\n    }]\n  },\n  LINEDEFS: {\n    size: 14,\n    properties: [{\n      name: 'vertex1'\n    }, {\n      name: 'vertex2'\n    }, {\n      name: 'flags'\n    }, {\n      name: 'action'\n    }, {\n      name: 'tag'\n    }, {\n      name: 'rightSidedef'\n    }, {\n      name: 'leftSidedef'\n    }]\n  },\n  SIDEDEFS: {\n    size: 30,\n    properties: [{\n      name: 'xOffset'\n    }, {\n      name: 'yOffset'\n    }, {\n      name: 'upper',\n      format: 'name'\n    }, {\n      name: 'lower',\n      format: 'name'\n    }, {\n      name: 'middle',\n      format: 'name'\n    }, {\n      name: 'sector'\n    }]\n  },\n  SECTORS: {\n    size: 26,\n    properties: [{\n      name: 'zFloor'\n    }, {\n      name: 'zCeil'\n    }, {\n      name: 'floorFlat',\n      format: 'name'\n    }, {\n      name: 'ceilFlat',\n      format: 'name'\n    }, {\n      name: 'light'\n    }, {\n      name: 'type'\n    }, {\n      name: 'tag'\n    }]\n  },\n  SEGS: {\n    size: 12,\n    properties: [{\n      name: 'vertex1'\n    }, {\n      name: 'vertex2'\n    }, {\n      name: 'angle'\n    }, {\n      name: 'linedef'\n    }, {\n      name: 'direction'\n    }, {\n      name: 'offset'\n    }]\n  },\n  SSECTORS: {\n    size: 4,\n    properties: [{\n      name: 'segCount'\n    }, {\n      name: 'first'\n    }]\n  },\n  NODES: {\n    size: 28,\n    properties: [{\n      name: 'partitionX'\n    }, {\n      name: 'partitionY'\n    }, {\n      name: 'changeX'\n    }, {\n      name: 'changeY'\n    }, // different form original\n    {\n      name: 'boundsRightTop'\n    }, {\n      name: 'boundsRightBottom'\n    }, {\n      name: 'boundsRightLeft'\n    }, {\n      name: 'boundsRightRight'\n    }, // different form original\n    {\n      name: 'boundsLeftTop'\n    }, {\n      name: 'boundsLeftBottom'\n    }, {\n      name: 'boundsLeftLeft'\n    }, {\n      name: 'boundsLeftRight'\n    }, {\n      name: 'childRight'\n    }, {\n      name: 'childLeft'\n    }]\n  }\n};\nvar HEXEN_MAP_DATA_SCHEMAS = {\n  THINGS: {\n    size: 20,\n    properties: [{\n      name: 'tid',\n      format: 'Int16'\n    }, {\n      name: 'x',\n      format: 'Int16'\n    }, {\n      name: 'y',\n      format: 'Int16'\n    }, {\n      name: 'z',\n      format: 'Int16'\n    }, {\n      name: 'angle',\n      format: 'Int16'\n    }, {\n      name: 'type',\n      format: 'Int16'\n    }, {\n      name: 'flags',\n      format: 'Int16'\n    }, {\n      name: 'special',\n      format: 'Int8',\n      littleEndian: false\n    }, // different from original\n    {\n      name: 'arg0',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg1',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg2',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg3',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg4',\n      format: 'Int8',\n      littleEndian: false\n    }]\n  },\n  LINEDEFS: {\n    size: 16,\n    properties: [{\n      name: 'vertex1'\n    }, {\n      name: 'vertex2'\n    }, {\n      name: 'flags'\n    }, {\n      name: 'action',\n      format: 'Uint8',\n      littleEndian: false\n    }, // different from original\n    {\n      name: 'arg0',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg1',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg2',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg3',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'arg4',\n      format: 'Int8',\n      littleEndian: false\n    }, {\n      name: 'rightSidedef'\n    }, {\n      name: 'leftSidedef'\n    }]\n  }\n};\nvar DEFAULT_MAP_PALETTE = {\n  background: {\n    blue: 0,\n    green: 0,\n    red: 0\n  },\n  solidWall: {\n    blue: 0,\n    green: 0,\n    red: 255\n  },\n  lowerWall: {\n    blue: 75,\n    green: 123,\n    red: 191\n  },\n  upperWall: {\n    blue: 0,\n    green: 255,\n    red: 255\n  },\n  sameHeight: {\n    blue: 131,\n    green: 131,\n    red: 131\n  }\n};\n/* ANSI conversion */\n\nvar ANSI_CODE_PAGE_437_TABLES = ['', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼', '►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼', ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂', 'Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å', 'É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ', 'á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»', '░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐', '└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧', '╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀', 'α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩', '≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', ' '];\nvar ANSI_BACKGROUND_COLOR_CODES = ['black', 'blue', 'green', 'cyan', 'red', 'magenta', 'brown', 'light-gray'];\nvar ANSI_FOREGROUND_COLOR_CODES = ['black', 'blue', 'green', 'cyan', 'red', 'magenta', 'brown', 'light-gray', 'dark-gray', 'light-blue', 'light-green', 'light-cyan', 'light-red', 'light-magenta', 'yellow', 'white'];\n// CONCATENATED MODULE: ./app/webWorkers/mapParser.js\n\n\n\n\nfunction getHeightDiff({\n    rightSidedefSector,\n    leftSidedefSector,\n}) {\n    let heightDifference = null;\n\n    if (rightSidedefSector.zFloor !== leftSidedefSector.zFloor) {\n        heightDifference = 'lowerWall';\n    } else if (rightSidedefSector.zCeil !== leftSidedefSector.zCeil) {\n        heightDifference = 'upperWall';\n    }\n\n    return heightDifference;\n}\n\nasync function createMapPreview({\n    mapData,\n    mapFormat,\n    mapSizeData,\n    palette,\n}) {\n    const {\n        SECTORS: sectors,\n        LINEDEFS: linedefs,\n        SIDEDEFS: sidedefs,\n        VERTEXES: vertices,\n    } = mapData || {};\n    if (!mapData || !sectors || !linedefs || !sidedefs || !vertices) {\n        console.error('Invalid mapData.');\n        return null;\n    }\n\n    let mapPalette = {};\n    /*\n    if (!palette || palette.length !== COLOR_COUNT_PER_PALETTE) {\n        console.warn('No valid palette found. Map preview will be drawn with default color scheme.', { palette });\n    */\n    mapPalette = DEFAULT_MAP_PALETTE;\n    /*\n    } else {\n        mapPalette = {\n            background: palette[0],\n            solidWall: palette[176],\n            lowerWall: palette[64],\n            upperWall: palette[231],\n            sameHeight: palette[96],\n        };\n    }\n    */\n\n    if (mapFormat === 'UDMF') {\n        console.error(`Unable to render '${mapFormat}' format maps.`);\n        return null;\n    }\n\n    const {\n        height,\n        width,\n        minX,\n        minY,\n    } = mapSizeData;\n\n    const { canvas, context } = createOffscreenCanvas({\n        height: height + (MAP_PADDING * 2),\n        width: width + (MAP_PADDING * 2),\n    });\n\n    context.fillStyle = mapPalette.background;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.lineWidth = 4;\n    context.imageSmoothingEnabled = false;\n\n    for (let i = 0; i < linedefs.length; i++) {\n        const linedef = linedefs[i];\n\n        const {\n            vertex1,\n            vertex2,\n            rightSidedef: rightSidedefIndex,\n            leftSidedef: leftSidedefIndex,\n        } = linedef;\n\n        let { x: x1, y: y1 } = vertices[vertex1];\n        let { x: x2, y: y2 } = vertices[vertex2];\n\n        // for some reason, Y coordinates need to be flipped in order to be displayed correctly\n        y1 *= -1;\n        y2 *= -1;\n\n        // map should be drawn relatively to { 0, 0 } instead of { minX, minY }\n        x1 -= minX - MAP_PADDING;\n        x2 -= minX - MAP_PADDING;\n        y1 -= minY - MAP_PADDING;\n        y2 -= minY - MAP_PADDING;\n\n        context.strokeStyle = mapPalette.solidWall;\n\n        // linedef is two-sided\n        if (leftSidedefIndex !== 65535) {\n            const rightSidedef = sidedefs[rightSidedefIndex];\n            const leftSidedef = sidedefs[leftSidedefIndex];\n            const rightSidedefSector = sectors[rightSidedef.sector];\n            const leftSidedefSector = sectors[leftSidedef.sector];\n\n            const heightDifference = getHeightDiff({\n                rightSidedefSector,\n                leftSidedefSector,\n            });\n\n            if (heightDifference) {\n                const { red, green, blue } = mapPalette[heightDifference];\n                context.strokeStyle = `rgb(${red},${green},${blue})`;\n            } else {\n                const { red, green, blue } = mapPalette.sameHeight;\n                context.strokeStyle = `rgb(${red},${green},${blue})`;\n            }\n        } else {\n            const { red, green, blue } = mapPalette.solidWall;\n            context.strokeStyle = `rgb(${red},${green},${blue})`;\n        }\n\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n    }\n\n    const blob = await canvas.convertToBlob();\n\n    return blob;\n}\n\nfunction getMapSize({ vertices }) {\n    if (!vertices) {\n        return null;\n    }\n\n    const minX = vertices.reduce((mX, vertex) => {\n        if (mX === null || vertex.x < mX) {\n            return vertex.x;\n        }\n\n        return mX;\n    }, null);\n\n    const maxX = vertices.reduce((mX, vertex) => {\n        if (mX === null || vertex.x > mX) {\n            return vertex.x;\n        }\n\n        return mX;\n    }, null);\n\n    const minY = vertices.reduce((mX, vertex) => {\n        // for some reason, Y coordinates need to be flipped in order to be displayed correctly\n        if (mX === null || vertex.y * -1 < mX) {\n            return vertex.y * -1;\n        }\n\n        return mX;\n    }, null);\n\n    const maxY = vertices.reduce((mX, vertex) => {\n        // for some reason, Y coordinates need to be flipped in order to be displayed correctly\n        if (mX === null || vertex.y * -1 > mX) {\n            return vertex.y * -1;\n        }\n\n        return mX;\n    }, null);\n\n    const width = maxX - minX;\n    const height = maxY - minY;\n\n    return {\n        minX,\n        maxX,\n        minY,\n        maxY,\n        width,\n        height,\n    };\n}\n\nfunction get8BitNameString({ data, position }) {\n    let output = '';\n    for (let i = 0; i < 8; i++) {\n        if (data.getUint8(position + i) !== 0) {\n            output += String.fromCharCode(data.getUint8(position + i));\n        }\n    }\n    return output;\n}\n\nfunction parseMapDataTypeEntry({\n    i,\n    data,\n    properties,\n    size,\n}) {\n    const entry = {};\n\n    let position = 0;\n    for (let j = 0; j < properties.length; j++) {\n        const {\n            name,\n            format = 'Uint16',\n            littleEndian = true,\n        } = properties[j];\n\n        if (format === 'name') {\n            entry[name] = get8BitNameString({ data, position });\n            position += 8;\n        } else {\n            const propertySize = format.replace(/\\D/g, '') / 8;\n            entry[name] = data[`get${format}`](\n                (i * size) + position,\n                littleEndian,\n            );\n            position += propertySize;\n        }\n    }\n\n    return entry;\n}\n\nfunction parseMapDataType({ dataType, data, mapFormat }) {\n    if (!data) {\n        return {};\n    }\n\n    let schemas = MAP_DATA_SCHEMAS;\n\n    if (mapFormat === 'Hexen' && (\n        dataType === 'THINGS'\n        || dataType === 'LINEDEFS')\n    ) {\n        console.log('Hexen map detected.');\n        schemas = HEXEN_MAP_DATA_SCHEMAS;\n    }\n\n    const { size, properties } = schemas[dataType] || {};\n\n    if (!size) {\n        return null;\n    }\n\n    if (!properties) {\n        return null;\n    }\n\n    const mapDataType = [];\n\n    const numberOfEntries = data.byteLength / size;\n\n    for (let i = 0; i < numberOfEntries; i++) {\n        let mapDataTypeEntry = {};\n        mapDataTypeEntry = parseMapDataTypeEntry({\n            i,\n            data,\n            properties,\n            size,\n        });\n\n        mapDataType.push(mapDataTypeEntry);\n    }\n\n    return mapDataType;\n}\n\nfunction parseMapData({ data, mapFormat }) {\n    const mapData = {};\n\n    const dataTypes = Object.keys(data || {});\n\n    for (let i = 0; i < dataTypes.length; i++) {\n        const dataType = dataTypes[i];\n        const parsedData = parseMapDataType({\n            dataType,\n            data: data[dataType].data,\n            mapFormat,\n        });\n        mapData[dataType] = parsedData;\n    }\n\n\n    return mapData;\n}\n\nonmessage = async (message) => {\n    try {\n        const {\n            wadId,\n            lump,\n            mapFormat, // not used for now\n            palette,\n        } = message.data;\n\n        const {\n            name,\n            type,\n            data,\n        } = lump;\n\n        console.log(`Parsing map '${type}/${name}' (WAD: '${wadId}') ...`);\n\n        let mapData = {};\n        try {\n            mapData = parseMapData({ data, mapFormat });\n            const mapSizeData = getMapSize({ vertices: mapData.VERTEXES });\n\n            if (mapSizeData) {\n                const mapPreview = await createMapPreview({\n                    mapData,\n                    mapFormat,\n                    mapSizeData,\n                    palette,\n                });\n\n                mapData = {\n                    ...mapData,\n                    ...mapSizeData,\n                    preview: mapPreview,\n                };\n            }\n        } catch (error) {\n            console.error(`An error occurred while parsing map '${type}/${name}' (WAD: '${wadId}').`, { error });\n\n            postMessage({\n                wadId,\n                lumpId: name,\n                lumpType: type,\n                error: error.message,\n            });\n\n            return;\n        }\n\n        // console.log(`Parsed map '${type}/${name}' (WAD: '${wadId}') ...`);\n\n        console.log({ mapData });\n\n        postMessage({\n            wadId,\n            lumpId: name,\n            lumpType: type,\n            output: mapData,\n        });\n    } catch (error) {\n        console.error('Something bad happened in mapParser.', { error });\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);