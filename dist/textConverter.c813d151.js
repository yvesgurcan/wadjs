!function(I){var n={};function g(C){if(n[C])return n[C].exports;var A=n[C]={i:C,l:!1,exports:{}};return I[C].call(A.exports,A,A.exports,g),A.l=!0,A.exports}g.m=I,g.c=n,g.d=function(I,n,C){g.o(I,n)||Object.defineProperty(I,n,{enumerable:!0,get:C})},g.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},g.t=function(I,n){if(1&n&&(I=g(I)),8&n)return I;if(4&n&&"object"==typeof I&&I&&I.__esModule)return I;var C=Object.create(null);if(g.r(C),Object.defineProperty(C,"default",{enumerable:!0,value:I}),2&n&&"string"!=typeof I)for(var A in I)g.d(C,A,function(n){return I[n]}.bind(null,A));return C},g.n=function(I){var n=I&&I.__esModule?function(){return I.default}:function(){return I};return g.d(n,"a",n),n},g.o=function(I,n){return Object.prototype.hasOwnProperty.call(I,n)},g.p="dist/",g(g.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./app/lib/constants.js\nvar TEXT = 'text';\nvar MAPDATA = 'mapdata';\nvar MUSIC = 'music';\nvar MIDI = 'midi';\nvar MP3 = 'mp3';\nvar PNG = 'png';\nvar MUS = 'mus';\nvar GRAPHIC = 'graphic';\nvar FLAT = 'flat';\nvar MARKER = 'marker';\nvar ENDOOM = 'ENDOOM';\nvar TEXTUREx = ['TEXTURE1', 'TEXTURE2'];\nvar TEXTLUMPS = ['DEHACKED', 'MAPINFO', 'ZMAPINFO', 'EMAPINFO', 'DMXGUS', 'DMXGUSC', 'WADINFO', 'EMENUS', 'MUSINFO', 'SNDINFO', 'GLDEFS', 'KEYCONF', 'SCRIPTS', 'LANGUAGE', 'DECORATE', 'SBARINFO', 'MENUDEF'];\nvar DATA_LUMPS = ['PLAYPAL', 'COLORMAP', 'TEXTURE1', 'TEXTURE2', 'PNAMES', 'ENDOOM'];\nvar DEFAULT_EXTENSION = 'lmp';\nvar EXTENSIONS = {\n  text: 'txt',\n  mp3: 'mp3',\n  mus: 'mus',\n  midi: 'mid',\n  png: 'png'\n};\n/* Environment */\n\nvar NO_BRAND_ENV = 'development-no-brand';\n/* Themes */\n\nvar DARK_THEME = 'dark';\nvar LIGHT_THEME = 'light';\n/* Input types */\n\nvar CHECKBOX = 'checkbox';\n/* File formats */\n\nvar SUPPORTED_FORMATS = ['.wad', '.zip', '.pk3', '.json'];\nvar VALID_FILE_FORMATS = ['', 'application/x-doom', 'application/zip', 'application/json'];\n/* WAD types */\n\nvar IWAD = 'IWAD';\nvar PWAD = 'PWAD';\nvar VALID_WAD_TYPES = [IWAD, PWAD];\n/* Lump types */\n\nvar MAP = 'maps';\nvar INTERMISSION = 'intermission';\nvar STATUS_BAR = 'status bar';\nvar MENU = 'menu';\nvar IMAGE_LUMPS = ['patches', 'flats', 'sprites', MENU, INTERMISSION, STATUS_BAR];\nvar UNCATEGORIZED = 'uncategorized';\n/* Lump names */\n\nvar THINGS = 'THINGS';\nvar TEXTMAP = 'TEXTMAP';\nvar ENDMAP = 'ENDMAP';\nvar MAP_LUMPS = [THINGS, 'LINEDEFS', 'SIDEDEFS', 'VERTEXES', 'SEGS', 'TEXTMAP', 'SSECTORS', 'NODES', 'SECTORS', 'REJECT', 'BLOCKMAP', // Hexen only\n'BEHAVIOR', // ZDoom only? (optional)\n'SCRIPTS', // Universal Doom Map Format only\n'ZNODES', 'DIALOGUE'];\nvar OPENGL_MAP_LUMPS = ['GL_VERT', 'GL_SEGS', 'GL_SSECT', 'GL_NODES', 'GL_PVS'];\nvar INTERMISSION_LUMPS = new RegExp(/^WI[0-9a-zA-Z_]{1,}$/); // Doom II\n\nvar INTERMISSION_MAP_NAME_LUMPS = new RegExp(/^CWILV[0-9a-zA-Z_]{1,}$/);\nvar STATUS_BAR_LUMPS = new RegExp(/^(ST|AMM|BRDR_)[0-9a-zA-Z_]{1,}$/);\n/* Unique lumps */\n\nvar ANSI_LUMPS = [// Doom or Chex Quest\n'ENDOOM', // Heretic\n'ENDTEXT', // Strife\n'ENDSTRF', // Boom\n'ENDBOOM'];\nvar MAPINFO = ['MAPINFO', 'ZMAPINFO'];\nvar PLAYPAL = 'PLAYPAL';\nvar COLORMAP = 'COLORMAP';\nvar PNAMES = 'PNAMES';\nvar SBARINFO = 'SBARINFO'; // Hexen only\n\nvar SNDINFO = 'SNDINFO';\nvar MENU_SCREENS = ['TITLEPIC', 'HELP', 'HELP1', 'HELP2', 'CREDIT'];\nvar INTER_SCREENS = ['INTERPIC', // Doom 1 registered\n'ENDPIC', 'VICTORY2', 'PFUB1', 'PFUB2', // Doom 2\n'BOSSBACK'];\nvar MUSIC_LUMPS = ['GENMIDI', 'DMXGUS', 'DMXGUSC'];\nvar DEMO_LUMPS = ['DEMO1', 'DEMO2', 'DEMO3', 'DEMO4'];\nvar END_LUMPS = new RegExp(/^END[0-9]{1,}$/);\n/* Lump original formats */\n\nvar ANSI = 'ANSI';\n/* Lump special values */\n\nvar LUMP_INDEX_ENTRY_SIZE = 16;\nvar LUMP_INDEX_ENTRY_OFFSET_TO_LUMP_SIZE = 4;\nvar LUMP_INDEX_ENTRY_OFFSET_TO_LUMP_NAME = 8;\nvar COLOR_COUNT_PER_PALETTE = 256;\nvar PALETTE_SIZE = 768;\nvar COLORMAP_SIZE = 256;\nvar BYTES_PER_COLOR = 3;\nvar GREEN_COLOR_OFFSET = 1;\nvar BLUE_COLOR_OFFSET = 2;\nvar FLAT_DIMENSIONS = 64;\nvar IMAGE_DATA_HEADER_SIZE = 8;\nvar IMAGE_DATA_BOUNDARY = 255;\nvar TRANSPARENT_PIXEL = -1;\nvar HEXEN_SOUND_ARCHIVE_PATH = '$ARCHIVEPATH';\nvar HEXEN_SOUND_REGISTERED = '$REGISTERED';\nvar HEXEN_MUSIC_KEYWORD = '$MAP';\n/* Worker internal errors */\n\nvar INVALID_TEXT = 'INVALID_TEXT';\n/* MUS -> MIDI conversion */\n\nvar MUS_HEADER = 'MUS';\nvar MUS_HEADER_SIGNATURE = ['M'.charCodeAt(0), 'U'.charCodeAt(0), 'S'.charCodeAt(0), 0x1A].join(' ');\nvar MIDI_HEADER = 'MThd';\nvar MIDI_HEADER_SIZE = 4;\nvar MIDI_HEADER_DATA = ['M'.charCodeAt(0), 'T'.charCodeAt(0), 'h'.charCodeAt(0), 'd'.charCodeAt(0), // Main header\n0x00, 0x00, 0x00, 0x06, // Header size\n0x00, 0x00, // MIDI type (0)\n0x00, 0x01, // Number of tracks\n0x00, 0x46, // Resolution\n'M'.charCodeAt(0), 'T'.charCodeAt(0), 'r'.charCodeAt(0), 'k'.charCodeAt(0), // Start of track\n0x00, 0x00, 0x00, 0x00];\nvar MUS_NUM_CHANNELS = 16;\nvar MUS_PERCUSSION_CHANNEL = 15;\nvar MIDI_PERCUSSION_CHANNEL = 9;\nvar MIDI_TRACKLENGTH_OFS = 18;\nvar MIDI_CONTROLLER_MAP = [0x00, 0x20, 0x01, 0x07, 0x0A, 0x0B, 0x5B, 0x5D, 0x40, 0x43, 0x78, 0x7B, 0x7E, 0x7F, 0x79]; // MUS event codes\n\nvar MUS_RELEASE_KEY = 0x00;\nvar MUS_PRESS_KEY = 0x10;\nvar MUS_PITCH_WHEEL = 0x20;\nvar MUS_SYSTEM_EVENT = 0x30;\nvar MUS_CHANGE_CONTROLLER = 0x40;\nvar MUS_SCORE_END = 0x60; // MIDI event codes\n\nvar MIDI_RELEASE_KEY = 0x80;\nvar MIDI_PRESS_KEY = 0x90;\nvar MIDI_CHANGE_CONTROLLER = 0xB0;\nvar MIDI_CHANGE_PATCH = 0xC0;\nvar MIDI_PITCH_WHEEL = 0xE0;\n/* MIDI player */\n\nvar MAX_I16 = Math.pow(2, 15);\nvar MIDI_AUDIO_BUFFER_SIZE = 8192; // signed 16-bit samples\n\nvar MIDI_AUDIO_S16LSB = 0x8010;\nvar MIDI_PATCH_URL = '/public/midi/pat/';\nvar MIDI_ERROR = 'MIDI_ERROR';\nvar MIDI_STATUS = 'MIDI_STATUS';\nvar MIDI_PRELOAD = 'MIDI_PRELOAD';\nvar MIDI_LOAD_FILE = 'MIDI_LOAD_FILE';\nvar MIDI_LOAD_PATCH = 'MIDI_LOAD_PATCH';\nvar MIDI_PLAY = 'MIDI_PLAY';\nvar MIDI_PAUSE = 'MIDI_PAUSE';\nvar MIDI_RESUME = 'MIDI_RESUME';\nvar MIDI_STOP = 'MIDI_STOP';\nvar MIDI_END = 'MIDI_END';\n/* ANSI conversion */\n\nvar ANSI_CODE_PAGE_437_TABLES = ['', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼', '►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼', ' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_', '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂', 'Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å', 'É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ', 'á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»', '░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐', '└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧', '╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀', 'α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩', '≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', ' '];\nvar ANSI_BACKGROUND_COLOR_CODES = ['black', 'blue', 'green', 'cyan', 'red', 'magenta', 'brown', 'light-gray'];\nvar ANSI_FOREGROUND_COLOR_CODES = ['black', 'blue', 'green', 'cyan', 'red', 'magenta', 'brown', 'light-gray', 'dark-gray', 'light-blue', 'light-green', 'light-cyan', 'light-red', 'light-magenta', 'yellow', 'white'];\n// CONCATENATED MODULE: ./app/workers/textConverter.js\n\n\nconst interpolateBackgroundAnsiCode = int => (\n    int === Number.isNaN ? null : ANSI_BACKGROUND_COLOR_CODES[int]\n);\n\nconst interpolateForegroundAnsiCode = int => (\n    int === Number.isNaN ? null : ANSI_FOREGROUND_COLOR_CODES[int]\n);\n\nconst parseAnsiScreen = (input) => {\n    const blocks = [];\n    let line = [];\n\n    for (let i = 0; i <= input.byteLength; i += 2) {\n        if (i !== 0 && i % 160 === 0) {\n            blocks.push(line);\n            line = [];\n        }\n\n        // last byte is unimportant but necessary to push the last line\n        if (i === input.byteLength) {\n            break;\n        }\n\n        const characterByte = input.getUint8(i);\n        const character = ANSI_CODE_PAGE_437_TABLES[characterByte];\n\n        const colorByte = input.getUint8(i + 1);\n\n        // missings bits are replaced by zeroes\n        const colorBits = (`000000000${colorByte.toString(2)}`).substr(-8);\n\n        const foregroundBits = colorBits.slice(4, 8);\n        const foregroundInt = parseInt(foregroundBits, 2);\n        const foreground = interpolateForegroundAnsiCode(foregroundInt);\n\n        const backgroundBits = colorBits.slice(0, 4);\n        const backgroundInt = parseInt(backgroundBits, 2);\n        const background = interpolateBackgroundAnsiCode(backgroundInt);\n\n        line.push({\n            character,\n            foreground,\n            background,\n        });\n    }\n\n    return blocks;\n};\n\nconst firstDecodeTextMethod = input => decodeURI(new TextDecoder('utf-8').decode(input).replace(/\\u0000/g, ' '));\n\nconst processNewLines = text => text.split('\\n');\n\nonmessage = (message) => {\n    const { wadId, lumpId, input } = message.data;\n\n    // console.log(`Converting '${lumpId}' to text (WAD: '${wadId}') ...`);\n\n    let output = null;\n    let convertedFormat = 'text';\n\n    if (lumpId === SNDINFO) {\n        postMessage({\n            wadId,\n            lumpId,\n            ignored: true,\n        });\n\n        return;\n    }\n\n    if (ANSI_LUMPS.includes(lumpId)) {\n        // ANSI\n        output = parseAnsiScreen(input);\n        convertedFormat = 'ANSI';\n    } else {\n        // text\n        // rules out certain lumps that are definitively not meant to be rendered as text\n        let splitText = null;\n        try {\n            const decodedText = firstDecodeTextMethod(input);\n            splitText = processNewLines(decodedText);\n        } catch (err) {\n            const errorMessage = `Could not convert '${lumpId}' to text (WAD: '${wadId}').`;\n            const id = INVALID_TEXT;\n            const error = {\n                id,\n                message: errorMessage,\n            };\n\n            // console.error(error, { err });\n\n            postMessage({\n                wadId,\n                lumpId,\n                error,\n            });\n\n            return;\n        }\n\n        output = splitText;\n    }\n\n    postMessage({\n        wadId,\n        lumpId,\n        output,\n        convertedFormat,\n    });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);